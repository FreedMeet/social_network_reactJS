{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/DialogsForm.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","DialogsItem","id","name","path","className","classes","dialog","activeClassName","activeLink","reduxForm","form","handleSubmit","onSubmit","createField","required","Textarea","Button","width","height","compose","MessageData","useSelector","messagePage","DialogsData","dispatch","useDispatch","dialogs","dialogsItem","map","messages","messagesItem","message","formData","actions","sendMessage","newMessageText"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,aAAe,8BAA8B,SAAW,0BAA0B,KAAO,wB,oHCIpNC,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SAOhB,SAASE,EAAsBC,GAOlC,OAAOC,YAAQN,EAARM,EANqC,SAACC,GAAW,IAC7CL,EAAwBK,EAAxBL,OAAWM,EADiC,YACpBD,EADoB,YAEnD,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAI,gB,6ECM3BC,EAboB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAEjCC,EAAO,YAAcF,EAEzB,OACI,qBAAKG,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CAASP,GAAII,EAAMI,gBAAiBF,IAAQG,WAA5C,SACKN,O,mECIFO,cAAuB,CAACC,KAAM,WAA9BD,EAZyC,SAAC,GAAoB,IAAnBE,EAAkB,EAAlBA,aACtD,OACI,uBAAMP,UAAWC,IAAQK,KAAME,SAAUD,EAAzC,UACKE,YAAsC,mBAAoB,iBAC3D,CAACC,KAAWC,KACZ,cAACC,EAAA,EAAD,CAAQC,MAAO,MAAOC,OAAQ,QAA9B,wBCoCGC,4BAAQzB,IAARyB,EAxCC,WAEZ,IAAMC,EAAcC,aAAY,SAAC9B,GAAD,OAAyBA,EAAM+B,YAAYF,eACrEG,EAAcF,aAAY,SAAC9B,GAAD,OAAyBA,EAAM+B,YAAYC,eAErEC,EAAWC,cAMjB,OACI,8BACI,sBAAKrB,UAAWC,IAAQqB,QAAxB,UAEI,qBAAKtB,UAAWC,IAAQsB,YAAxB,SACKJ,EAAYK,KACT,SAACtB,GAAD,OACI,cAAC,EAAD,CAAaJ,KAAMI,EAAOJ,KAAMD,GAAIK,EAAOL,IAASK,EAAOL,SAIvE,sBAAKG,UAAWC,IAAQwB,SAAxB,UAEI,qBAAKzB,UAAWC,IAAQyB,aAAxB,SACKV,EAAYQ,KACT,SAACG,GAAD,OACI,qBAAsB3B,UAAWC,IAAQ0B,QAAzC,SAAmDA,EAAQA,SAAjDA,EAAQ9B,SAI9B,cAAC,EAAD,CAAaW,SAxBZ,SAACoB,GACdR,EAASS,IAAQC,YAAYF,EAASG","file":"static/js/4.a83b75ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"messagesItem\":\"Dialogs_messagesItem__FCeL0\",\"messages\":\"Dialogs_messages__1w_Up\",\"form\":\"Dialogs_form__1EQXf\"};","import React, {FC} from 'react'\nimport {connect,} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\nimport {appStateType} from \"../redux/redux-store\"\n\nlet mapStateToPropsForRedirect = (state: appStateType) => ({\n    isAuth: state.auth.isAuth\n} as mapPropsType)\n\ntype mapPropsType = {\n    isAuth: boolean\n}\n\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\n    const RedirectComponent: FC<mapPropsType> = (props) => {\n        const {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={'/login'}/>\n        return <Component {...restProps as WCP} />\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n}\n","import { NavLink } from 'react-router-dom';\nimport classes from './../Dialogs.module.css';\nimport {FC} from \"react\";\n\ntype PropsType = {\n    id: number\n    name: string\n}\n\nconst DialogsItem: FC<PropsType> = ({id, name}) => {\n\n    let path = '/dialogs/' + id;\n\n    return (\n        <div className={classes.dialog}>            \n            <NavLink to={path} activeClassName={classes.activeLink}>\n                {name}\n            </NavLink>\n        </div>\n    );\n};\n\nexport default DialogsItem;","import classes from \"./Dialogs.module.css\";\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Textarea} from \"../Common/formControls/formControls\";\nimport {required} from \"../../utils/validators\";\nimport Button from \"../Common/button/Button\";\nimport {FC} from \"react\";\nimport {MessageType} from \"../../redux/dialogsReducer\";\n\nconst DialogsForm: FC<InjectedFormProps<MessageType>> = ({handleSubmit}) => {\n    return (\n        <form className={classes.form} onSubmit={handleSubmit}>\n            {createField<MessageFormValueTypeKeys>('You`r message...', 'newMessageText',\n            [required], Textarea)}\n            <Button width={'10%'} height={'104px'}>send</Button>\n        </form>\n    );\n};\n\ntype MessageFormValueTypeKeys = Extract<keyof { newMessageText: string }, string>\n\nexport default reduxForm<MessageType>({form: 'dialogs'})(DialogsForm);","import classes from './Dialogs.module.css';\nimport DialogsItem from './DialogsItem/DialogsItem';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions, DialogType, MessageType} from \"../../redux/dialogsReducer\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport DialogsForm from \"./DialogsForm\";\nimport {appStateType} from \"../../redux/redux-store\";\n\nconst Dialogs = () => {\n\n    const MessageData = useSelector((state: appStateType) => state.messagePage.MessageData)\n    const DialogsData = useSelector((state: appStateType) => state.messagePage.DialogsData)\n\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData: any) => {\n        dispatch(actions.sendMessage(formData.newMessageText));\n    };\n\n    return (\n        <div>\n            <div className={classes.dialogs}>\n\n                <div className={classes.dialogsItem}>\n                    {DialogsData.map(\n                        (dialog: DialogType) =>\n                            <DialogsItem name={dialog.name} id={dialog.id} key={dialog.id}/>\n                    )}\n                </div>\n\n                <div className={classes.messages}>\n\n                    <div className={classes.messagesItem}>\n                        {MessageData.map(\n                            (message: MessageType) =>\n                                <div key={message.id} className={classes.message}>{message.message}</div>\n                        )}\n                    </div>\n\n                    <DialogsForm onSubmit={onSubmit}/>\n\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default compose(withAuthRedirect)(Dialogs);"],"sourceRoot":""}