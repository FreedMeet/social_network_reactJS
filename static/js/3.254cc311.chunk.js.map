{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","status","updateStatus","useState","editMode","setEditMode","statusValue","setStatus","useDispatch","useEffect","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","classes","profileFormFields","Field","component","Input","name","placeholder","validate","Textarea","style","display","alignSelf","marginTop","opacity","width","type","Object","keys","contacts","map","key","marginBottom","flexDirection","Button","height","Contacts","contactTitle","contactValue","ProfileData","textTransform","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","isOwner","savePhoto","changeProfile","profilePage","alt","src","photos","small","userPhoto","profileInfo","profileName","fullName","marginRight","file_upload","target","files","length","onClick","formData","initialValues","Preloader","Post","message","publishedTime","post","MyPostsReduxForm","required","MyPosts","memo","addPost","PostsElements","useSelector","PostsData","id","posts","formPost","newPostText","Profile","compose","withRouter","userId","match","params","myUserId","dispatch","refreshProfile","useCallback","currentUserId","getProfileTC","getStatusTC","addPostAC","file","savePhotoTC","saveProfileTC","updateStatusTC"],"mappings":"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","file":"static/js/3.254cc311.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        };\n    };\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfileInfo_profilePage__8Apdk\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"profileName\":\"ProfileInfo_profileName__52BYI\",\"profile\":\"ProfileInfo_profile__2LHtf\",\"file_upload\":\"ProfileInfo_file_upload__2OfPh\",\"profileFormFields\":\"ProfileInfo_profileFormFields__1DjQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"formPost\":\"MyPosts_formPost__3MaxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","import React, {useState, useEffect} from 'react'\nimport {useDispatch} from \"react-redux\";\nimport {updateStatusTC} from \"../../../redux/profileReducer\";\n\nconst ProfileStatusWithHooks = ({status, updateStatus}) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [statusValue, setStatus] = useState(status);\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        setStatus(status)\n    }, [status])\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        updateStatus(statusValue);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            { editMode\n                ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={statusValue}/>\n                : <span onDoubleClick={activateEditMode}>{status || '======'}</span>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from \"./ProfileInfo.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../Common/formControls/formControls\";\nimport Button from \"../../Common/button/Button\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit} >\n            <div className={classes.profileFormFields}>\n                <Field component={Input} name={'fullName'} placeholder='full name' validate={[]}/>\n                <Field component={Textarea} name={'lookingForAJobDescription'} placeholder='professional skills'\n                       validate={[]}/>\n                <Field component={Textarea} name={'aboutMe'} placeholder='about me' validate={[]}/>\n                <div style={{display: 'flex', alignSelf:'flex-start', marginTop:'10px'}}>\n                    <span style={{opacity: '.7', width:'300px'}}>Looking for a job:</span>\n                    <Field component={Input} type={'checkbox'} name={'lookingForAJob'} validate={[]}/>\n                </div>\n                <div style={{alignSelf:'flex-start'}}>\n                    <h3>Contacts</h3>\n                    {Object.keys(profile.contacts).map(key => {\n                        return <Field key={key} style={{marginBottom: '5px'}} component={Input} name={'contacts.' + key}\n                                      placeholder={key} validate={[]}/>\n                    })}\n                </div>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <Button width={'160px'} height={'31px'}>Save Change</Button>\n            </div>\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm);\n\nexport default ProfileDataReduxForm","import classes from \"./ProfileInfo.module.css\";\n\nconst ProfileData = ({profile}) =>{\n    return (\n        <div className={classes.contacts}>\n            <p>Looking for a job: <b style={{textTransform: 'uppercase'}}>{profile.lookingForAJob ? 'Yes' : 'No'}</b>\n            </p>\n            {profile.lookingForAJob && <p>Professional skills: <b>{profile.lookingForAJobDescription}</b></p>}\n            <p>About me: <b>{profile.aboutMe}</b></p>\n            <div style={{marginBottom:'-10px'}}>\n                <h3>Contacts</h3>\n                {Object.keys(profile.contacts).map(key => {\n                    return <Contacts key={key} contactTitle={key}\n                                     contactValue={profile.contacts[key]\n                                         ? profile.contacts[key]\n                                         : '==='}/>\n                })}\n            </div>\n        </div>\n    )\n};\n\nconst Contacts = ({contactTitle, contactValue}) =>{\n    return <div>\n        <p>{contactTitle}: <b>{contactValue}</b></p>\n    </div>\n}\n\nexport default ProfileData\n","import {useState} from 'react'\nimport classes from './ProfileInfo.module.css'\nimport userPhoto from '../../../assets/images/users.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport Button from \"../../Common/button/Button\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport ProfileData from \"./ProfileData\";\nimport Preloader from \"../../Common/Preloader/Preloader\";\n\nconst ProfileInfo = ({profile, status, isOwner, savePhoto, changeProfile, updateStatus}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    };\n\n    const onSubmit = (formData) => {\n        changeProfile(formData)\n        setEditMode(false)\n    };\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className={classes.profilePage}>\n\n            <div>\n                <img alt={'mainPhoto'} src={profile.photos.small != null ? profile.photos.small : userPhoto}/>\n                <div className={classes.profileInfo}>\n                    <div className={classes.profileName}>\n                        {profile.fullName}\n                    </div>\n                    <div style={{marginTop: '-20px'}}>\n                        <ProfileStatusWithHooks updateStatus={updateStatus} status={status}/>\n                    </div>\n                </div>\n            </div>\n            {isOwner &&\n            <div style={{display: 'flex'}}>\n                <div style={{marginRight: '10px'}} className={classes.file_upload}>\n                    <Button width={'150px'} height={'30px'}>Change photo</Button>\n                    <input type=\"file\" onChange={onMainPhotoSelected}/>\n                </div>\n                {!editMode && <Button onClick={() => {\n                    setEditMode(true)\n                }} width={'160px'} height={'31px'}>Edit profile</Button>}\n            </div>\n            }\n            {editMode\n                ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile}/>\n                : <ProfileData profile={profile}/>}\n        </div>\n    )\n}\n\nexport default ProfileInfo","import classes from './Post.module.css'\n\nconst Post = ({message, publishedTime}) => {\n    return (\n            <div className={classes.post}>\n                <p>{message}</p>\n                <span>{publishedTime}</span>\n            </div>\n    );\n}\n\nexport default Post","import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport { required } from '../../../utils/validators'\nimport {Textarea} from '../../Common/formControls/formControls';\nimport Button from \"../../Common/button/Button\";\nimport {useSelector} from \"react-redux\";\n\nconst MyPostForm = ({handleSubmit}) => {\n    return (\n        <form className={classes.form} onSubmit={handleSubmit}>\n            <Field\n                placeholder=\"What happens?\"\n                name={'newPostText'}\n                component={Textarea}\n                validate={[required]} />\n            <Button width={'20%'} height={'40px'} type='submit'>Add post</Button>\n        </form>\n    )\n};\n\nconst MyPostsReduxForm = reduxForm({ form: 'myPosts' })(MyPostForm);\n\nconst MyPosts = React.memo(({addPost}) => {\n    const PostsData = useSelector(state => state.profilePage.PostsData);\n\n    let PostsElements = PostsData.map(\n        post => <Post message={post.message} publishedTime={post.publishedTime} key={post.id}/>\n    );\n\n    const onSubmit = (formData) => {\n        addPost(formData.newPostText);\n    };\n\n    return (\n        <div className={classes.posts}>\n            <div className={classes.formPost}>\n                <MyPostsReduxForm onSubmit={onSubmit}/>\n            </div>\n            {PostsElements}\n        </div>\n    );\n});\n\nexport default MyPosts","import ProfileInfo from './ProfileInfo/ProfileInfo';\nimport classes from './Profile.module.css'\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport MyPosts from \"./MyPosts/MyPosts\";\n\nconst Profile = ({isOwner, profile, status, addPost, savePhoto, changeProfile, updateStatus}) => {\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className={classes.profile}>\n            <ProfileInfo\n                isOwner={isOwner}\n                profile={profile}\n                status={status}\n                addPost={addPost}\n                savePhoto={savePhoto}\n                changeProfile={changeProfile}\n                updateStatus={updateStatus}\n            />\n\n            {isOwner && profile && <MyPosts addPost={addPost} />}\n\n        </div>\n    );\n}\n\nexport default Profile","import React, {useEffect, useCallback} from 'react';\nimport Profile from './Profile';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    addPostAC,\n    getProfileTC,\n    getStatusTC,\n    savePhotoTC,\n    saveProfileTC,\n    updateStatusTC\n} from '../../redux/profileReducer';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\n\nconst ProfileContainer = ({match: {params: {userId}}, props}) => {\n\n    const [profile, status, myUserId] = useSelector(\n        state => [\n            state.profilePage.profile,\n            state.profilePage.status,\n            state.auth.userId\n        ]\n    );\n    const dispatch = useDispatch();\n\n    const refreshProfile = useCallback(() => {\n        let currentUserId = userId;\n\n        if (!currentUserId) {\n            currentUserId = myUserId;\n        }\n        dispatch(getProfileTC(currentUserId));\n        dispatch(getStatusTC(currentUserId));\n    }, [userId, dispatch]);\n\n    useEffect(() => {\n        refreshProfile()\n    }, [userId, refreshProfile]);\n\n    const addPost = useCallback((newPostText) => {\n        dispatch(addPostAC(newPostText));\n    }, [dispatch]);\n\n    const savePhoto = useCallback((file) => {\n        dispatch(savePhotoTC(file));\n    }, [dispatch]);\n\n    const changeProfile = useCallback((formData) => {\n        dispatch(saveProfileTC(formData));\n    }, [dispatch]);\n\n    const updateStatus = useCallback((statusValue) => {\n        dispatch(updateStatusTC(statusValue));\n    }, [dispatch]);\n\n\n    return (\n        <Profile\n            isOwner={!userId}\n            profile={profile}\n            status={status}\n            addPost={addPost}\n            savePhoto={savePhoto}\n            changeProfile={changeProfile}\n            updateStatus={updateStatus}\n        />\n    );\n};\n\nexport default compose(withRouter, withAuthRedirect)(ProfileContainer);"],"sourceRoot":""}