{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","post","message","publishedTime","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","Button","width","height","type","MyPosts","nextProps","nextState","PostsElements","PostsData","map","id","posts","formPost","formData","addPostAC","newPostText","MyPostsContainer","profilePage","dispatch","ProfileStatusWithHooks","status","updateStatusTC","useState","editMode","setEditMode","statusValue","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","autoFocus","onDoubleClick","ProfileDataReduxForm","profile","error","profileFormFields","Input","style","display","alignSelf","marginTop","opacity","Object","keys","contacts","key","marginBottom","flexDirection","Contacts","contactTitle","contactValue","ProfileData","textTransform","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhotoTC","isOwner","saveProfileTC","Preloader","alt","src","photos","small","userPhoto","profileInfo","profileName","fullName","marginRight","file_upload","target","files","length","onClick","then","initialValues","Profile","compose","withRouter","userId","match","params","useSelector","myUserId","useDispatch","refreshProfile","useCallback","currentUserId","getProfileTC","getStatusTC"],"mappings":"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","file":"static/js/3.6511b0fa.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        };\n    };\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfileInfo_profilePage__8Apdk\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"profileName\":\"ProfileInfo_profileName__52BYI\",\"profile\":\"ProfileInfo_profile__2LHtf\",\"file_upload\":\"ProfileInfo_file_upload__2OfPh\",\"profileFormFields\":\"ProfileInfo_profileFormFields__1DjQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"formPost\":\"MyPosts_formPost__3MaxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","import classes from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n            <div className={classes.post}>\n                <p>{props.message}</p>\n                <span>{props.publishedTime}</span>\n            </div>\n    );\n}\n\nexport default Post","import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport { required, maxLengthCreator } from '../../../utils/validators'\nimport {Textarea} from '../../Common/formControls/formControls';\nimport Button from \"../../Common/button/Button\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostForm = (props) => {\n    return (\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <Field\n                placeholder=\"What happens?\"\n                name={'newPostText'}\n                component={Textarea}\n                validate={[required, maxLength10]} />\n            <Button width={'20%'} height={'40px'} type='submit'>Add post</Button>\n        </form>\n    )\n};\n\nconst MyPostsReduxForm = reduxForm({ form: 'myPosts' })(MyPostForm);\n\nclass MyPosts extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps !== this.props || nextState !== this.state;\n    }\n\n    render() {\n\n        let PostsElements = this.props.PostsData.map(\n            post => <Post message={post.message} publishedTime={post.publishedTime} key={post.id}/>\n        );\n\n        const onSubmit = (formData) => {\n            this.props.addPostAC(formData.newPostText);\n        };\n\n        return (\n            <div className={classes.posts}>\n\n                <div className={classes.formPost}>\n                    <MyPostsReduxForm onSubmit={onSubmit}/>\n                </div>\n                {PostsElements}\n            </div>\n        );\n    }\n}\n\nexport default MyPosts","import { connect } from 'react-redux';\nimport { addPostAC } from '../../../redux/profileReducer'\nimport MyPosts from './MyPosts'\n\nlet mapStateToProps = (state) => {\n    let profilePage = state.profilePage\n    return {\n        PostsData: profilePage.PostsData,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPostAC: (newPostText) => {\n            debugger;\n            dispatch(addPostAC(newPostText));\n        },\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React, {useState, useEffect} from 'react'\n\nconst ProfileStatusWithHooks = ({status, updateStatusTC}) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [statusValue, setStatus] = useState(status);\n\n    useEffect( () => {\n        setStatus(status)\n    }, [status])\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        updateStatusTC(statusValue);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            { editMode\n                ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={statusValue}/>\n                : <span onDoubleClick={activateEditMode}>{status || '======'}</span>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from \"./ProfileInfo.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../Common/formControls/formControls\";\nimport Button from \"../../Common/button/Button\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit} >\n            <div className={classes.profileFormFields}>\n                <Field component={Input} name={'fullName'} placeholder='full name' validate={[]}/>\n                <Field component={Textarea} name={'lookingForAJobDescription'} placeholder='professional skills'\n                       validate={[]}/>\n                <Field component={Textarea} name={'aboutMe'} placeholder='about me' validate={[]}/>\n                <div style={{display: 'flex', alignSelf:'flex-start', marginTop:'10px'}}>\n                    <span style={{opacity: '.7', width:'300px'}}>Looking for a job:</span>\n                    <Field component={Input} type={'checkbox'} name={'lookingForAJob'} validate={[]}/>\n                </div>\n                <div style={{alignSelf:'flex-start'}}>\n                    <h3>Contacts</h3>\n                    {Object.keys(profile.contacts).map(key => {\n                        return <Field key={key} style={{marginBottom: '5px'}} component={Input} name={'contacts.' + key}\n                                      placeholder={key} validate={[]}/>\n                    })}\n                </div>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <Button width={'160px'} height={'31px'} type='submit'>Save Change</Button>\n            </div>\n        </form>\n    )\n}\n\nconst ProfileDataReduxForm = reduxForm({form: 'profileData'})(ProfileDataForm);\n\nexport default ProfileDataReduxForm","import classes from \"./ProfileInfo.module.css\";\n\nconst ProfileData = ({profile}) =>{\n    return (\n        <div className={classes.contacts}>\n            <p>Looking for a job: <b style={{textTransform: 'uppercase'}}>{profile.lookingForAJob ? 'Yes' : 'No'}</b>\n            </p>\n            {profile.lookingForAJob && <p>Professional skills: <b>{profile.lookingForAJobDescription}</b></p>}\n            <p>About me: <b>{profile.aboutMe}</b></p>\n            <div style={{marginBottom:'-10px'}}>\n                <h3>Contacts</h3>\n                {Object.keys(profile.contacts).map(key => {\n                    return <Contacts key={key} contactTitle={key}\n                                     contactValue={profile.contacts[key]\n                                         ? profile.contacts[key]\n                                         : '==='}/>\n                })}\n            </div>\n        </div>\n    )\n};\n\nconst Contacts = ({contactTitle, contactValue}) =>{\n    return <div>\n        <p>{contactTitle}: <b>{contactValue}</b></p>\n    </div>\n}\n\nexport default ProfileData\n","import {useState} from 'react'\nimport classes from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader'\nimport userPhoto from '../../../assets/images/users.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport Button from \"../../Common/button/Button\";\nimport ProfileDataForm from \"./ProfileDataForm\";\nimport ProfileData from \"./ProfileData\";\n\nconst ProfileInfo = ({profile, savePhotoTC, updateStatusTC, status, isOwner, saveProfileTC}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhotoTC(e.target.files[0])\n        }\n    };\n\n    const onSubmit = (formData) => {\n        saveProfileTC(formData).then(\n            setEditMode(false)\n        );\n\n    }\n\n    return (\n        <div className={classes.profilePage}>\n\n            <div>\n                <img alt={'mainPhoto'} src={profile.photos.small != null ? profile.photos.small : userPhoto}/>\n                <div className={classes.profileInfo}>\n                    <div className={classes.profileName}>\n                        {profile.fullName}\n                    </div>\n                    <div style={{marginTop: '-20px'}}>\n                        <ProfileStatusWithHooks status={status} updateStatusTC={updateStatusTC}/>\n                    </div>\n                </div>\n            </div>\n            {isOwner &&\n            <div style={{display: 'flex'}}>\n                <div style={{marginRight: '10px'}} className={classes.file_upload}>\n                    <Button width={'150px'} height={'30px'}>Change photo</Button>\n                    <input type=\"file\" onChange={onMainPhotoSelected}/>\n                </div>\n                {!editMode && <Button onClick={() => {\n                    setEditMode(true)\n                }} width={'160px'} height={'31px'}>Edit profile</Button>}\n            </div>\n            }\n            {editMode\n                ? <ProfileDataForm onSubmit={onSubmit} initialValues={profile} profile={profile}/>\n                : <ProfileData profile={profile}/>}\n        </div>\n    )\n}\n\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport classes from './Profile.module.css'\n\nconst Profile = (props) => {\n\n    return (\n        <div className={classes.profile}>\n            <ProfileInfo\n                savePhotoTC={props.savePhotoTC}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatusTC={props.updateStatusTC}\n                saveProfileTC={props.saveProfileTC}\n            />\n\n            {props.isOwner && props.profile && <MyPostsContainer />}\n\n        </div>\n    );\n}\n\nexport default Profile","import React, {useEffect, useCallback} from 'react';\nimport Profile from './Profile';\nimport {connect, useDispatch, useSelector} from 'react-redux';\nimport {getProfileTC, getStatusTC, savePhotoTC, saveProfileTC, updateStatusTC} from '../../redux/profileReducer';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\n\nconst ProfileContainer = ({match: {params: {userId}}, props}) => {\n    const [profile, status, myUserId] = useSelector(\n        state => [\n            state.profilePage.profile,\n            state.profilePage.status,\n            state.auth.userId\n        ]\n    );\n    const dispatch = useDispatch();\n\n     const refreshProfile = useCallback(() => {\n        let currentUserId = userId;\n\n         if (!currentUserId) {\n             currentUserId = myUserId;\n         }\n         dispatch(getProfileTC(currentUserId));\n         dispatch(getStatusTC(currentUserId));\n    }, [userId, dispatch]);\n\n    useEffect( () => {\n        refreshProfile()\n    }, [userId, refreshProfile]);\n\n    return (\n        <Profile\n            {...props}\n            isOwner={!userId}\n            profile={profile}\n            status={status}\n            updateStatusTC={dispatch(updateStatusTC)}\n            savePhotoTC={dispatch(savePhotoTC)}\n            saveProfileTC={dispatch(saveProfileTC)}\n        />\n    );\n};\n\n// class ProfileContainer extends React.Component {\n//\n//     refreshProfile() {\n//         let userId = this.props.match.params.userId;\n//\n//         if (!userId) {\n//             userId = this.props.myUserId;\n//         }\n//\n//         this.props.getProfileTC(userId);\n//         this.props.getStatusTC(userId);\n//         debugger\n//     }\n//\n//     componentDidMount() {\n//         this.refreshProfile();\n//     };\n//\n//     componentDidUpdate(prevProps, prevState, snapshot) {\n//         if (this.props.match.params.userId !== prevProps.match.params.userId) {\n//             this.refreshProfile();\n//         }\n//     };\n//\n//     render() {\n//         return (\n//             <Profile\n//                 {...this.props}\n//                 isOwner={!this.props.match.params.userId}\n//                 profile={this.props.profile}\n//                 status={this.props.status}\n//                 updateStatusTC={this.props.updateStatusTC}\n//                 savePhoto={this.props.savePhotoTC}\n//                 saveProfileTC={this.props.saveProfileTC}\n//             />\n//         );\n//     };\n// }\n//\n// let mapStateToProps = (state) => ({\n//     profile: state.profilePage.profile,\n//     status: state.profilePage.status,\n//     myUserId: state.auth.userId\n// });\n//\nexport default compose(\n    // connect(mapStateToProps, {getProfileTC, getStatusTC, updateStatusTC, savePhotoTC, saveProfileTC}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}