{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogsItem","path","id","className","classes","dialog","activeClassName","activeLink","name","Message","message","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","type","Dialogs","DialogsElements","DialogsData","map","MessagesElements","MessageData","dialogs","dialogsItem","messages","messagesItem","formData","sendMessageAC","newMessageText","compose","messagePage","dispatch"],"mappings":"4OAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFiCM,YAAQX,EAARW,CAAoCL,K,oBCfzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,aAAe,8BAA8B,KAAO,sBAAsB,SAAW,4B,+GCerMC,EAbK,SAACN,GAEjB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBF,IAAQG,WAA5C,SACKb,EAAMc,UCFRC,EANC,SAACf,GACb,OACI,qBAAKS,UAAWC,IAAQM,QAAxB,SAAkChB,EAAMgB,W,yCCmB1CC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAfL,SAAClB,GACjB,OACI,uBAAMS,UAAWC,IAAQS,KAAMC,SAAUpB,EAAMqB,aAA/C,UACI,cAACC,EAAA,EAAD,CACAC,YAAY,mBACZT,KAAM,iBACNU,UAAWC,IACXC,SAAWC,MACX,wBAAQC,KAAK,SAAb,wBA8CGC,EArCC,SAAC7B,GAEb,IAAI8B,EAAkB9B,EAAM+B,YAAYC,KACpC,SAAArB,GAAM,OAAI,cAAC,EAAD,CAAaG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,IAASG,EAAOH,OAGrEyB,EAAmBjC,EAAMkC,YAAYF,KACrC,SAAAhB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQR,OAO/D,OACI,8BACI,sBAAKC,UAAWC,IAAQyB,QAAxB,UAEI,qBAAK1B,UAAWC,IAAQ0B,YAAxB,SACKN,IAGL,sBAAKrB,UAAWC,IAAQ2B,SAAxB,UAEI,qBAAK5B,UAAWC,IAAQ4B,aAAxB,SACKL,IAGL,cAAChB,EAAD,CAAkBG,SAlBjB,SAACmB,GACdvC,EAAMwC,cAAcD,EAASE,4BCdtBC,4BACXvC,aAjBkB,SAACV,GACnB,IAAIkD,EAAclD,EAAMkD,YACxB,MAAO,CACHT,YAAaS,EAAYT,YACzBH,YAAaY,EAAYZ,gBAIR,SAACa,GACtB,MAAO,CACHJ,cAAe,SAACC,GACZG,EAASJ,YAAcC,SAO/B7C,IAFW8C,CAGbb","file":"static/js/4.b5dda41c.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        };\n    };\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"activeLink\":\"Dialogs_activeLink__34w6e\",\"messagesItem\":\"Dialogs_messagesItem__FCeL0\",\"form\":\"Dialogs_form__1EQXf\",\"messages\":\"Dialogs_messages__1w_Up\"};","import { NavLink } from 'react-router-dom';\nimport classes from './../Dialogs.module.css';\n\nconst DialogsItem = (props) => {\n\n    let path = '/dialogs/' + props.id;\n\n    return (\n        <div className={classes.dialog}>            \n            <NavLink to={path} activeClassName={classes.activeLink}>\n                {props.name}\n            </NavLink>\n        </div>\n    );\n};\n\nexport default DialogsItem;","import classes from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={classes.message}>{props.message}</div>\n    );\n}\n\nexport default Message;","import classes from './Dialogs.module.css';\nimport DialogsItem from './DialogsItem/DialogsItem';\nimport Message from './Message/Message';\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport {Textarea} from '../Common/formControls/formControls';\nimport { required } from '../../utils/validators'\n\nconst DialogsForm = (props) => {\n    return (\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <Field \n            placeholder='You`r message...' \n            name={'newMessageText'} \n            component={Textarea}\n            validate={ required } />\n            <button type='submit'>send</button>\n        </form>\n    );\n};\n\n\n\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsForm);\n\nconst Dialogs = (props) => {\n\n    let DialogsElements = props.DialogsData.map(\n        dialog => <DialogsItem name={dialog.name} id={dialog.id} key={dialog.id} />\n    );\n\n    let MessagesElements = props.MessageData.map(\n        message => <Message message={message.message} key={message.id} />\n    );\n\n    const onSubmit = (formData) => {\n        props.sendMessageAC(formData.newMessageText);\n    };\n\n    return (\n        <div>\n            <div className={classes.dialogs}>\n\n                <div className={classes.dialogsItem}>\n                    {DialogsElements}\n                </div>\n\n                <div className={classes.messages}>\n\n                    <div className={classes.messagesItem}>\n                        {MessagesElements}\n                    </div>\n\n                    <DialogsReduxForm onSubmit={onSubmit} />\n                    \n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { sendMessageAC} from '../../redux/dialogsReducer';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) => {\n    let messagePage = state.messagePage\n    return {\n        MessageData: messagePage.MessageData,\n        DialogsData: messagePage.DialogsData\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessageAC: (newMessageText) => {\n            dispatch(sendMessageAC(newMessageText));\n        },\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}