{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","post","message","publishedTime","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","Button","width","height","type","MyPosts","nextProps","nextState","PostsElements","PostsData","map","id","posts","formPost","formData","addPostAC","newPostText","MyPostsContainer","profilePage","dispatch","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatusTC","autoFocus","onDoubleClick","ProfileInfo","profile","Preloader","src","photos","small","userPhoto","profileInfo","profileName","fullName","style","marginTop","isOwner","file_upload","target","files","length","savePhotoTC","contacts","href","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Profile","ProfileContainer","userId","match","params","myUserId","getProfileTC","getStatusTC","refreshProfile","prevProps","prevState","snapshot","savePhoto","compose","withRouter"],"mappings":"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","file":"static/js/3.20e026d5.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        };\n    };\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"formPost\":\"MyPosts_formPost__3MaxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfileInfo_profilePage__8Apdk\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"profileName\":\"ProfileInfo_profileName__52BYI\",\"contacts\":\"ProfileInfo_contacts__3y62P\",\"file_upload\":\"ProfileInfo_file_upload__2OfPh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\"};","import classes from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n            <div className={classes.post}>\n                <p>{props.message}</p>\n                <span>{props.publishedTime}</span>\n            </div>\n    );\n}\n\nexport default Post","import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport { required, maxLengthCreator } from '../../../utils/validators'\nimport {Textarea} from '../../Common/formControls/formControls';\nimport Button from \"../../Common/button/Button\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostForm = (props) => {\n    return (\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <Field\n                placeholder=\"What happens?\"\n                name={'newPostText'}\n                component={Textarea}\n                validate={[required, maxLength10]} />\n            <Button width={'20%'} height={'40px'} type='submit'>Add post</Button>\n        </form>\n    )\n};\n\nconst MyPostsReduxForm = reduxForm({ form: 'myPosts' })(MyPostForm);\n\nclass MyPosts extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps !== this.props || nextState !== this.state;\n    }\n\n    render() {\n\n        let PostsElements = this.props.PostsData.map(\n            post => <Post message={post.message} publishedTime={post.publishedTime} key={post.id}/>\n        );\n\n        const onSubmit = (formData) => {\n            this.props.addPostAC(formData.newPostText);\n        };\n\n        return (\n            <div className={classes.posts}>\n\n                <div className={classes.formPost}>\n                    <MyPostsReduxForm onSubmit={onSubmit}/>\n                </div>\n                {PostsElements}\n            </div>\n        );\n    }\n}\n\nexport default MyPosts","import { connect } from 'react-redux';\nimport { addPostAC } from '../../../redux/profileReducer'\nimport MyPosts from './MyPosts'\n\nlet mapStateToProps = (state) => {\n    let profilePage = state.profilePage\n    return {\n        PostsData: profilePage.PostsData,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPostAC: (newPostText) => {\n            debugger;\n            dispatch(addPostAC(newPostText));\n        },\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React, {useState, useEffect} from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatusTC(status);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            { editMode\n                ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\n                : <span onDoubleClick={activateEditMode}>{props.status || '======'}</span>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader'\nimport userPhoto from '../../../assets/images/users.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\nimport Button from \"../../Common/button/Button\";\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhotoTC(e.target.files[0])\n        }\n    };\n\n    return (\n        <div className={classes.profilePage}>\n\n            <div>\n                <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto}/>\n                <div className={classes.profileInfo}>\n                    <div className={classes.profileName}>\n                        {props.profile.fullName}\n                    </div>\n                    <div style={{marginTop: '-20px'}}>\n                        <ProfileStatusWithHooks status={props.status} updateStatusTC={props.updateStatusTC}/>\n                    </div>\n                </div>\n            </div>\n            {props.isOwner &&\n            <div className={classes.file_upload}>\n                <Button width={'150px'} height={'30px'}>Change photo</Button>\n                <input type=\"file\" onChange={onMainPhotoSelected}/>\n            </div>\n            }\n\n\n            <div className={classes.contacts}>\n                <h3>Contacts</h3>\n                <p>facebook: <a href='#'>{props.profile.contacts.facebook}</a></p>\n                <p>website: <a href='#'>{props.profile.contacts.website}</a></p>\n                <p>vk: <a href='#'>{props.profile.contacts.vk}</a></p>\n                <p>twitter: <a href='#'>{props.profile.contacts.twitter}</a></p>\n                <p>instagram: <a href='#'>{props.profile.contacts.instagram}</a></p>\n                <p>youtube: <a href='#'>{props.profile.contacts.youtube}</a></p>\n                <p>github: <a href='#'>{props.profile.contacts.github}</a></p>\n                <p>mainLink: <a href='#'>{props.profile.contacts.mainLink}</a></p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport classes from './Profile.module.css'\n\nconst Profile = (props) => {\n\n    return (\n        <div className={classes.profile}>\n            <ProfileInfo\n                savePhotoTC={props.savePhotoTC}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatusTC={props.updateStatusTC}\n            />\n\n            {props.isOwner && <MyPostsContainer />}\n\n        </div>\n    );\n}\n\nexport default Profile","import React from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getProfileTC, getStatusTC, savePhotoTC, updateStatusTC} from '../../redux/profileReducer';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n\n        if (!userId) {\n            userId = this.props.myUserId;\n        }\n\n        this.props.getProfileTC(userId);\n        this.props.getStatusTC(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    };\n\n    render() {\n        return (\n            <Profile\n                {...this.props}\n                isOwner={!this.props.match.params.userId}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatusTC={this.props.updateStatusTC}\n                savePhoto={this.props.savePhotoTC}\n            />\n        );\n    };\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    myUserId: state.auth.userId\n});\n\nexport default compose(\n    connect(mapStateToProps, {getProfileTC, getStatusTC, updateStatusTC, savePhotoTC}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}