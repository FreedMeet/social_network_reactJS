{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","post","message","publishedTime","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","type","MyPosts","nextProps","nextState","PostsElements","PostsData","map","id","posts","formPost","formData","addPostAC","newPostText","MyPostsContainer","profilePage","dispatch","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatusTC","autoFocus","onDoubleClick","ProfileInfo","profile","src","photos","small","userPhoto","profileInfo","profileName","fullName","style","marginTop","Preloader","Profile","ProfileContainer","userId","match","params","myUserId","getProfileTC","getStatusTC","compose","withRouter"],"mappings":"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","file":"static/js/3.ffab79fc.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\n            return <Component {...this.props} />\n        };\n    };\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"formPost\":\"MyPosts_formPost__3MaxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfileInfo_profilePage__8Apdk\",\"profileInfo\":\"ProfileInfo_profileInfo__2IJgv\",\"profileName\":\"ProfileInfo_profileName__52BYI\",\"contacts\":\"ProfileInfo_contacts__3y62P\"};","import classes from './Post.module.css'\n\nconst Post = (props) => {\n    return (\n            <div className={classes.post}>\n                <p>{props.message}</p>\n                <span>{props.publishedTime}</span>\n            </div>\n    );\n}\n\nexport default Post","import React from 'react'\nimport { Field, reduxForm } from 'redux-form';\nimport classes from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport { required, maxLengthCreator } from '../../../utils/validators'\nimport {Textarea} from '../../Common/formControls/formControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst MyPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                placeholder=\"What happens?\"\n                name={'newPostText'}\n                component={Textarea}\n                validate={[required, maxLength10]} />\n            <button type='submit'>Add post</button>\n        </form>\n    )\n};\n\nconst MyPostsReduxForm = reduxForm({ form: 'myPosts' })(MyPostForm);\n\nclass MyPosts extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps !== this.props || nextState !== this.state;\n    }\n\n    render() {\n\n        let PostsElements = this.props.PostsData.map(\n            post => <Post message={post.message} publishedTime={post.publishedTime} key={post.id}/>\n        );\n\n        const onSubmit = (formData) => {\n            this.props.addPostAC(formData.newPostText);\n        };\n\n        return (\n            <div className={classes.posts}>\n\n                <div className={classes.formPost}>\n                    <MyPostsReduxForm onSubmit={onSubmit}/>\n                </div>\n                {PostsElements}\n            </div>\n        );\n    }\n}\n\nexport default MyPosts","import { connect } from 'react-redux';\nimport { addPostAC } from '../../../redux/profileReducer'\nimport MyPosts from './MyPosts'\n\nlet mapStateToProps = (state) => {\n    let profilePage = state.profilePage\n    return {\n        PostsData: profilePage.PostsData,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPostAC: (newPostText) => {\n            debugger;\n            dispatch(addPostAC(newPostText));\n        },\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer","import React, {useState, useEffect} from 'react'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatusTC(status);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            { editMode\n                ? <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\n                : <span onDoubleClick={activateEditMode}>{props.status || '======'}</span>\n            }\n        </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import classes from './ProfileInfo.module.css'\nimport Preloader from '../../Common/Preloader/Preloader'\nimport userPhoto from '../../../assets/images/users.png'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\n\nconst ProfileInfo = (props) => {\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div className={classes.profilePage}>\n\n            <div>\n                <img src={props.profile.photos.small != null ? props.profile.photos.small : userPhoto} />\n                <div className={classes.profileInfo}>\n                    <div className={classes.profileName}>\n                        {props.profile.fullName}\n                    </div>\n                    <div style={{ marginTop: '-20px' }}>\n                        <ProfileStatusWithHooks status={props.status} updateStatusTC={props.updateStatusTC} />\n                    </div>\n                </div>\n            </div>\n\n\n            {/* <div className={classes.contacts}>\n                <h3>Contacts</h3>\n                <p>facebook: <a href='#'>{props.profile.contacts.facebook}</a></p>\n                <p>website: <a href='#'>{props.profile.contacts.website}</a></p>\n                <p>vk: <a href='#'>{props.profile.contacts.vk}</a></p>\n                <p>twitter: <a href='#'>{props.profile.contacts.twitter}</a></p>\n                <p>instagram: <a href='#'>{props.profile.contacts.instagram}</a></p>\n                <p>youtube: <a href='#'>{props.profile.contacts.youtube}</a></p>\n                <p>github: <a href='#'>{props.profile.contacts.github}</a></p>\n                <p>mainLink: <a href='#'>{props.profile.contacts.mainLink}</a></p>\n            </div> */}\n        </div>\n    )\n}\n\nexport default ProfileInfo","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatusTC={props.updateStatusTC}\n            />\n\n            <MyPostsContainer />\n\n        </div>\n    );\n}\n\nexport default Profile","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfileTC, getStatusTC, updateStatusTC } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport  { withAuthRedirect }  from '../../hoc/withAuthRedirect'\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId;\n\n        if (!userId) {\n            userId = this.props.myUserId;\n        }\n\n        this.props.getProfileTC(userId);\n        this.props.getStatusTC(userId);\n    };\n\n    render() {\n        return (\n            <Profile\n                {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatusTC={this.props.updateStatusTC}\n            />\n        );\n    };\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    myUserId: state.auth.userId\n});\n\nexport default compose(\n    connect(mapStateToProps, { getProfileTC, getStatusTC, updateStatusTC }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}